package leet236;

import java.util.List;
import java.util.Stack;

public class Solution {

	public static class TreeNode {
		int val;
		TreeNode left;
		TreeNode right;
		TreeNode(int x) { val = x; }
	}

	private List<TreeNode> findPath(TreeNode root, TreeNode p) {
		Stack<TreeNode> st = new Stack<>();
		
	}
	
	public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
		List<TreeNode> pPath = findPath(root, p), qPath = findPath(root, q);
		TreeNode tn = null;
		for (int i = 0; i < pPath.size() && i < qPath.size() && pPath.get(i) == qPath.get(i); i ++) {
			tn = pPath.get(i);
		}
		return tn;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
