package leet029;

import java.util.ArrayList;
import java.util.List;

public class Solution {

	public int divide(int dividend, int divisor) {
		if (divisor == 0)
			return Integer.MAX_VALUE;
		List<Integer> powerList = new ArrayList<>(), pow2List = new ArrayList<>();
		int pow = divisor, pow2 = 1;
		while (pow <= dividend){
			powerList.add(pow);
			pow2List.add(pow2);
			pow += pow;
			pow2 += pow2;
		}
		int cur = powerList.size() - 1, i = 0, result = 0;
		while (dividend >= divisor){
			for (i = cur; i >= 0 && powerList.get(i) > dividend; i --) ;
			cur = i - 1;
			result += pow2List.get(i);
			dividend -= powerList.get(i);
		}
		return result;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(new Solution().divide(6, 3));
	}

}
