package leet044;

import java.util.ArrayList;
import java.util.List;

public class SolutionII extends Solution {

	private boolean isSame(char c1, char c2){
		if (c1 == c2 || c1 == '?' || c2 == '?' || c1 == '*' || c2 == '*')
			return true;
		return false;
	}
	
	private char[] transToArray(String s){
		List<Character> cList = new ArrayList<>();
		cList.add('0');
		if (s.length() > 0)
			cList.add(s.charAt(0));
		for (int i = 1; i < s.length(); i ++)
			if (! (s.charAt(i) == '*' && s.charAt(i - 1) == '*'))
				cList.add(s.charAt(i));
		char[] rsay = new char[cList.size()];
		for (int i = 0; i < cList.size(); i ++)
			rsay[i] = cList.get(i);
		return rsay;
	}
	
	public boolean isMatch(String s, String p){
		char[] sArray = this.transToArray(s), pArray = this.transToArray(p);
		boolean[][] dp = new boolean[sArray.length + 1][pArray.length + 1];
		dp[0][0] = true;
		for (int i = 1; i < dp[0].length; i ++)
			if (pArray[i] == '*' && dp[0][i - 1])
				dp[0][i] = true;
			else
				dp[0][i] = false;
		for (int i = 1; i < dp.length; i ++)
			if (sArray[i] == '*' && dp[i - 1][0])
				dp[i][0] = true;
			else
				dp[i][0] = false;
		for (int i = 1; i < sArray.length; i ++){
			boolean existed = false;
			for (int j = 1; j < pArray.length; j ++){
				if (pArray[j] == '*'){
					for (int k = i; k > 0; k --){
						if (dp[k][j - 1]){
							existed = true;
							dp[i][j] = true;
							break;
						}
						continue;
					}
				}
				if (sArray[i] == '*'){
					for (int k = j; k > 0; k --){
						if (dp[i - 1][k]){
							existed = true;
							dp[i][j] = true;
							break;
						}
					}
					continue;
				}
				if (isSame(sArray[i], pArray[j])){
					existed = true;
					dp[i][j] = true;
					continue;
				}
				dp[i][j] = false;
			}
		}
		return true;
	}

}
