package leet135;

public class Solution {

	public int candy(int[] ratings) {

		if(ratings.length < 2)
			return ratings.length;
		int result = 0, up = 0, down = 0, i = 1, j = 0, np = 0;
		boolean peekFound = false;
		while(i < ratings.length){
			while(!peekFound){
				for(up = 1; i < ratings.length && ratings[i-1] < ratings[i]; i ++, up ++)
					result += up;
				if(i >= ratings.length)
					return result + up;
				if(ratings[i] == ratings[i-1]){
					result += up;
					i ++;
					continue;
				}
				if(ratings[i-1] > ratings[i])
					peekFound = true;
			}
			peekFound = false;
			int top = i;
			for(;i < ratings.length && ratings[i] <= ratings[i-1]; i ++);
			for(j = i-1, down = 1; j >= top; j --){
				result += down;
				if(ratings[j] < ratings[j-1])
					down ++;
			}
			result += Math.max(up, down) * np;
			if(i < ratings.length)
				result -= 1;	//free one valley point for the next loop
			peekFound = false;
		}
		return result;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Solution obj = new Solution();
		int[] ratings = {1, 0};
		System.out.println(obj.candy(ratings));
	}

}
